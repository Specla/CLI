// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should export properties 1`] = `
Object {
  "settings": Object {
    "env": "test",
    "etag": "weak",
    "etag fn": [Function],
    "jsonp callback name": "callback",
    "query parser": "extended",
    "query parser fn": [Function],
    "subdomain offset": 2,
    "trust proxy": false,
    "trust proxy fn": [Function],
    "view": [Function],
    "views": "/Users/kvartborg/Code/specla/specla/test/tmp/views",
    "x-powered-by": true,
  },
}
`;

exports[`Should export properties 2`] = `"/"`;

exports[`Should proxy .all to the express instance 1`] = `
Layer {
  "handle": [Function],
  "keys": Array [],
  "name": "bound dispatch",
  "params": undefined,
  "path": undefined,
  "regexp": /\\^all\\\\/\\?\\$/i,
  "route": Route {
    "methods": Object {
      "acl": true,
      "bind": true,
      "checkout": true,
      "connect": true,
      "copy": true,
      "delete": true,
      "get": true,
      "head": true,
      "link": true,
      "lock": true,
      "m-search": true,
      "merge": true,
      "mkactivity": true,
      "mkcalendar": true,
      "mkcol": true,
      "move": true,
      "notify": true,
      "options": true,
      "patch": true,
      "post": true,
      "propfind": true,
      "proppatch": true,
      "purge": true,
      "put": true,
      "rebind": true,
      "report": true,
      "search": true,
      "subscribe": true,
      "trace": true,
      "unbind": true,
      "unlink": true,
      "unlock": true,
      "unsubscribe": true,
    },
    "path": "all",
    "stack": Array [
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "acl",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "bind",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "checkout",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "connect",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "copy",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "delete",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "get",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "head",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "link",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "lock",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "m-search",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "merge",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "mkactivity",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "mkcalendar",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "mkcol",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "move",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "notify",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "options",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "patch",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "post",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "propfind",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "proppatch",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "purge",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "put",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "rebind",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "report",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "search",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "subscribe",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "trace",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "unbind",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "unlink",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "unlock",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "unsubscribe",
        "name": "allCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
    ],
  },
}
`;

exports[`Should proxy .delete to the express instance 1`] = `
Layer {
  "handle": [Function],
  "keys": Array [],
  "name": "bound dispatch",
  "params": undefined,
  "path": undefined,
  "regexp": /\\^delete\\\\/\\?\\$/i,
  "route": Route {
    "methods": Object {
      "delete": true,
    },
    "path": "delete",
    "stack": Array [
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "delete",
        "name": "deleteCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
    ],
  },
}
`;

exports[`Should proxy .engine to the express instance 1`] = `
Object {
  ".pug": [Function],
}
`;

exports[`Should proxy .get (http) to the express instance 1`] = `
Layer {
  "handle": [Function],
  "keys": Array [],
  "name": "bound dispatch",
  "params": undefined,
  "path": undefined,
  "regexp": /\\^get\\\\/\\?\\$/i,
  "route": Route {
    "methods": Object {
      "get": true,
    },
    "path": "get",
    "stack": Array [
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "get",
        "name": "getCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
    ],
  },
}
`;

exports[`Should proxy .on method to the express instance 1`] = `
Object {
  "mount": Array [
    [Function],
    [Function],
  ],
}
`;

exports[`Should proxy .param to the express instance 1`] = `
Object {
  "id": Array [
    [Function],
  ],
}
`;

exports[`Should proxy .post to the express instance 1`] = `
Layer {
  "handle": [Function],
  "keys": Array [],
  "name": "bound dispatch",
  "params": undefined,
  "path": undefined,
  "regexp": /\\^post\\\\/\\?\\$/i,
  "route": Route {
    "methods": Object {
      "post": true,
    },
    "path": "post",
    "stack": Array [
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "post",
        "name": "deleteCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
    ],
  },
}
`;

exports[`Should proxy .put to the express instance 1`] = `
Layer {
  "handle": [Function],
  "keys": Array [],
  "name": "bound dispatch",
  "params": undefined,
  "path": undefined,
  "regexp": /\\^put\\\\/\\?\\$/i,
  "route": Route {
    "methods": Object {
      "put": true,
    },
    "path": "put",
    "stack": Array [
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "put",
        "name": "deleteCallback",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
    ],
  },
}
`;

exports[`Should proxy .route method to express instance 1`] = `
Layer {
  "handle": [Function],
  "keys": Array [],
  "name": "bound dispatch",
  "params": undefined,
  "path": undefined,
  "regexp": /\\^\\\\/test\\\\/\\?\\$/i,
  "route": Route {
    "methods": Object {
      "_all": true,
      "get": true,
    },
    "path": "/test",
    "stack": Array [
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": undefined,
        "name": "all",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
      Layer {
        "handle": [Function],
        "keys": Array [],
        "method": "get",
        "name": "get",
        "params": undefined,
        "path": undefined,
        "regexp": /\\^\\\\/\\?\\$/i,
      },
    ],
  },
}
`;
